{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport axios from 'axios';\n\nconst API_KEY = '45808598-d89d2298a0dffc9605af6e928';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (\n  word,\n  page,\n  per_page,\n  orientation = 'horizontal'\n) => {\n  try {\n    const axiosOptions = {\n      params: {\n        key: API_KEY,\n        q: word,\n        image_type: 'photo',\n        orientation: orientation,\n        safesearch: 'true',\n        page,\n        per_page,\n      },\n    };\n\n    const axiosResopne = await axios.get('', axiosOptions);\n\n    const data = axiosResopne.data;\n    if (data.hits.length === 0) {\n      iziToast.error({\n        position: 'topLeft',\n        message:\n          'Sorry, there are no images matching your search query. Please, try again!',\n      });\n      throw new Error('No images found');\n    }\n\n    return data;\n  } catch {\n    console.log(err);\n  }\n};\n","import SimpleLightbox from 'simplelightbox';\n\nexport const renderImages = (images, gallery) => {\n  const createCard = images\n    .map(img => {\n      return `<li class=\"photo-card\">\n  <a class=\"gallery-link\" href=\"${img.largeImageURL}\">\n    <div class=\"card-content\">\n      <img class=\"gallery-image\" src=\"${img.webformatURL}\" alt=\"${img.tags}\" />\n      <ul class=\"card-info-list\">\n        <li class=\"info-item\">\n          <p class=\"info-description\">Likes</p>\n          <p class=\"info-description-value\">${img.likes}</p>\n        </li>\n        <li class=\"info-item\">\n          <p class=\"info-description\">Views</p>\n          <p class=\"info-description-value\">${img.views}</p>\n        </li>\n        <li class=\"info-item\">\n          <p class=\"info-description\">Comments</p>\n          <p class=\"info-description-value\">${img.comments}</p>\n        </li>\n        <li class=\"info-item\">\n          <p class=\"info-description\">Downloads</p>\n          <p class=\"info-description-value\">${img.downloads}</p>\n        </li>\n      </ul>\n    </div>\n  </a>\n</li>\n\n`;\n    })\n    .join('');\n  gallery.innerHTML = createCard;\n\n  let galleryLibrary = new SimpleLightbox('.gallery a', {\n    captions: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n  galleryLibrary.refresh();\n};\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderImages } from './js/render-functions.js';\nimport iziToast from 'izitoast';\n\nlet page = 1;\nlet per_page = 15;\nlet userValue = '';\nlet totalPages = 1;\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('.input-seach');\nconst gallery = document.querySelector('.gallery');\nconst loaderEl = document.querySelector('.js-loader');\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n  const searchQuery = input.value.trim();\n\n  if (searchQuery === '') {\n    iziToast.error({\n      position: 'topLeft',\n      message:\n        'Sorry, the field must not contain only spaces. Please, try again!',\n    });\n\n    form.reset();\n    gallery.innerHTML = '';\n\n    return;\n  }\n\n  loaderEl.classList.remove('is-hidden');\n\n  try {\n    const response = await fetchImages(searchQuery);\n    input.value = '';\n    loaderEl.classList.add('is-hidden');\n    if (response.hits.length !== 0) {\n      renderImages(response.hits, gallery);\n    }\n  } catch {\n    loaderEl.classList.add('is-hidden');\n    input.value = '';\n    console.error('Error fetching images:', error);\n  }\n\n  // function scrollWindow() {\n  //   const galleryItemEl = document.querySelector('.gallery-item');\n  //   const galleryItemHeight = galleryItemEl.getBoundingClientRect().height;\n  //   window.scrollBy({\n  //     top: galleryItemHeight * 2,\n  //     behavior: 'smooth',\n  //   });\n  // }\n});\n"],"names":["API_KEY","axios","fetchImages","word","page","per_page","orientation","axiosOptions","data","iziToast","renderImages","images","gallery","createCard","img","SimpleLightbox","form","input","loaderEl","event","searchQuery","response"],"mappings":"owBAGA,MAAMA,EAAU,qCAChBC,EAAM,SAAS,QAAU,2BAElB,MAAMC,EAAc,MACzBC,EACAC,EACAC,EACAC,EAAc,eACX,CACH,GAAI,CACF,MAAMC,EAAe,CACnB,OAAQ,CACN,IAAKP,EACL,EAAGG,EACH,WAAY,QACZ,YAAaG,EACb,WAAY,OACZ,KAAAF,EACA,SAAAC,CACD,CACP,EAIUG,GAFe,MAAMP,EAAM,IAAI,GAAIM,CAAY,GAE3B,KAC1B,GAAIC,EAAK,KAAK,SAAW,EACvB,MAAAC,EAAS,MAAM,CACb,SAAU,UACV,QACE,2EACV,CAAO,EACK,IAAI,MAAM,iBAAiB,EAGnC,OAAOD,CACX,MAAU,CACN,QAAQ,IAAI,GAAG,CAChB,CACH,ECvCaE,EAAe,CAACC,EAAQC,IAAY,CAC/C,MAAMC,EAAaF,EAChB,IAAIG,GACI;AAAA,kCACqBA,EAAI,aAAa;AAAA;AAAA,wCAEXA,EAAI,YAAY,UAAUA,EAAI,IAAI;AAAA;AAAA;AAAA;AAAA,8CAI5BA,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA,8CAITA,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA,8CAITA,EAAI,QAAQ;AAAA;AAAA;AAAA;AAAA,8CAIZA,EAAI,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAQtD,EACA,KAAK,EAAE,EACVF,EAAQ,UAAYC,EAEC,IAAIE,EAAe,aAAc,CACpD,SAAU,GACV,aAAc,MACd,aAAc,GAClB,CAAG,EACc,QAAO,CACxB,ECjCMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,cAAc,EAC7CL,EAAU,SAAS,cAAc,UAAU,EAC3CM,EAAW,SAAS,cAAc,YAAY,EAEpDF,EAAK,iBAAiB,SAAU,MAAMG,GAAS,CAC7CA,EAAM,eAAc,EACpB,MAAMC,EAAcH,EAAM,MAAM,KAAI,EAEpC,GAAIG,IAAgB,GAAI,CACtBX,EAAS,MAAM,CACb,SAAU,UACV,QACE,mEACR,CAAK,EAEDO,EAAK,MAAK,EACVJ,EAAQ,UAAY,GAEpB,MACD,CAEDM,EAAS,UAAU,OAAO,WAAW,EAErC,GAAI,CACF,MAAMG,EAAW,MAAMnB,EAAYkB,CAAW,EAC9CH,EAAM,MAAQ,GACdC,EAAS,UAAU,IAAI,WAAW,EAC9BG,EAAS,KAAK,SAAW,GAC3BX,EAAaW,EAAS,KAAMT,CAAO,CAEzC,MAAU,CACNM,EAAS,UAAU,IAAI,WAAW,EAClCD,EAAM,MAAQ,GACd,QAAQ,MAAM,yBAA0B,KAAK,CAC9C,CAUH,CAAC"}